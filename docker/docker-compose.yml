version: '3'
services:
  x-app: &app-base
    build:
      context: ../
      dockerfile: docker/Dockerfile
    env_file:
      - .env
  app:
    <<: *app-base
    container_name: app
    ports:
      - ${DOCKER_APP_PORT:-3000}:${APP_PORT:-3000}
    command: npm run start:dev
    volumes:
      - ../:/usr/src/app
    depends_on:
      db:
        condition: service_started
      prisma_migrate:
        condition: service_completed_successfully

  prisma_migrate:
    <<: *app-base
    container_name: prisma_migrate
    command: npm run prisma:migrate
    volumes:
      - ../:/app
    depends_on:
      db:
        condition: service_healthy


  db:
    image: postgres:14
    ports:
      - ${PG_DOCKER_PORT:-5432}:${PG_DB_PORT:-5432}
    environment:
      POSTGRES_USER: ${PG_DB_USER}
      POSTGRES_PASSWORD: ${PG_DB_PASSWORD}
      POSTGRES_DB: ${PG_DB_NAME}
    healthcheck:
      test: [ "CMD-SHELL", "sh -c 'pg_isready -U postgres -d profile'" ]
      interval: 10s
      timeout: 3s
      retries: 3
    volumes:
      - postgres_data:/var/lib/postgresql/data

volumes:
  postgres_data: ~